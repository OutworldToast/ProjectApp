// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectApp.WebApi.Data;

#nullable disable

namespace ProjectApp.WebApi.Migrations
{
    [DbContext(typeof(OnderzoekContext))]
    partial class OnderzoekContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeperkingPanellid", b =>
                {
                    b.Property<int>("BeperkingenId")
                        .HasColumnType("int");

                    b.Property<int>("PanelledenId")
                        .HasColumnType("int");

                    b.HasKey("BeperkingenId", "PanelledenId");

                    b.HasIndex("PanelledenId");

                    b.ToTable("BeperkingPanellid");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Beperking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categorie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Beperkingen");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Bericht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("Inhoud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tijdstip")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Berichten");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Gebruiker1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Gebruiker2Id")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Gebruiker1Id");

                    b.HasIndex("Gebruiker2Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Deelname", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OnderzoekId")
                        .HasColumnType("int");

                    b.Property<int>("PanellidId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OnderzoekId");

                    b.HasIndex("PanellidId");

                    b.ToTable("Deelnames");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Gebruiker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Emailadres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefoonnummer")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gebruikers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Gebruiker");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Onderzoek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Beloning")
                        .HasColumnType("int");

                    b.Property<int>("BeperkingId")
                        .HasColumnType("int");

                    b.Property<string>("Beschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HoeveelheidDeelnemers")
                        .HasColumnType("int");

                    b.Property<DateTime>("Onderzoeksdatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoortOnderzoek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tijdslimiet")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BeperkingId");

                    b.ToTable("Onderzoeken");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Voogd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Emailadres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PanellidId")
                        .HasColumnType("int");

                    b.Property<int>("Telefoonnummer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PanellidId")
                        .IsUnique();

                    b.ToTable("Voogden");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Bedrijf", b =>
                {
                    b.HasBaseType("ProjectApp.WebApi.Models.Gebruiker");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Omschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Bedrijf");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Panellid", b =>
                {
                    b.HasBaseType("ProjectApp.WebApi.Models.Gebruiker");

                    b.Property<string>("Achternaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Benaderingsvoorkeur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hulpmiddelen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Onafhankelijk")
                        .HasColumnType("bit");

                    b.Property<string>("Voornaam")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Panellid");
                });

            modelBuilder.Entity("BeperkingPanellid", b =>
                {
                    b.HasOne("ProjectApp.WebApi.Models.Beperking", null)
                        .WithMany()
                        .HasForeignKey("BeperkingenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectApp.WebApi.Models.Panellid", null)
                        .WithMany()
                        .HasForeignKey("PanelledenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Bericht", b =>
                {
                    b.HasOne("ProjectApp.WebApi.Models.Chat", "Chat")
                        .WithMany("Berichten")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Chat", b =>
                {
                    b.HasOne("ProjectApp.WebApi.Models.Gebruiker", "Gebruiker1")
                        .WithMany()
                        .HasForeignKey("Gebruiker1Id");

                    b.HasOne("ProjectApp.WebApi.Models.Gebruiker", "Gebruiker2")
                        .WithMany()
                        .HasForeignKey("Gebruiker2Id");

                    b.Navigation("Gebruiker1");

                    b.Navigation("Gebruiker2");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Deelname", b =>
                {
                    b.HasOne("ProjectApp.WebApi.Models.Onderzoek", "Onderzoek")
                        .WithMany()
                        .HasForeignKey("OnderzoekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectApp.WebApi.Models.Panellid", "Panellid")
                        .WithMany()
                        .HasForeignKey("PanellidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Onderzoek");

                    b.Navigation("Panellid");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Onderzoek", b =>
                {
                    b.HasOne("ProjectApp.WebApi.Models.Beperking", "TypeBeperking")
                        .WithMany("Onderzoeken")
                        .HasForeignKey("BeperkingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeBeperking");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Voogd", b =>
                {
                    b.HasOne("ProjectApp.WebApi.Models.Panellid", "Panellid")
                        .WithOne("Voogd")
                        .HasForeignKey("ProjectApp.WebApi.Models.Voogd", "PanellidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Panellid");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Beperking", b =>
                {
                    b.Navigation("Onderzoeken");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Chat", b =>
                {
                    b.Navigation("Berichten");
                });

            modelBuilder.Entity("ProjectApp.WebApi.Models.Panellid", b =>
                {
                    b.Navigation("Voogd");
                });
#pragma warning restore 612, 618
        }
    }
}
